buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "gradle.plugin.com.palantir.gradle.gitversion:gradle-git-version:0.5.2"
    classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.4.7"
  }
}

apply plugin: 'groovy'
apply plugin: 'application'
apply plugin: 'com.palantir.git-version'
apply plugin: 'maven-publish'
apply plugin: "com.jfrog.artifactory"

repositories {
    mavenCentral()
    jcenter()
    maven {
        url 'http://code.praqma.net/repo/maven/'
    }
}

dependencies {
    compile 'org.codehaus.groovy:groovy-all:2.4.4'
    compile 'org.slf4j:slf4j-api:1.7.21'
    compile 'net.praqma:cool:0.6.48'
    compile('org.jfrog.artifactory.client:artifactory-java-client-services:1.2.2'){
        exclude group: 'org.codehaus.groovy'
    }
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
}

def versionString = gitVersion()
// makes gradle wo any argument publish the build to artifactory.
defaultTasks 'artifactoryPublish'

task functionalTest(type: Test) {
    dependsOn('testClasses')
    include 'toGit/functional/**'
}

task uberjar(type: Jar) {
    dependsOn('compileGroovy')
    from files(sourceSets.main.output.classesDir)
    from configurations.runtime.asFileTree.files.collect { zipTree(it) }
    manifest {
        attributes 'Main-Class': 'toGit.Run'
    }
}

mainClassName='toGit.Run'

test {
    exclude 'toGit/functional/**'
}

task zip2git(type: Zip){
  description 'Creates a 2git.zip f publication'
  dependsOn 'uberjar'
  outputs.upToDateWhen {false}
  from('build/libs') {
    include('2git.jar')
  }
  from('.') {
    include('migration.dsl')
  }
  archiveName "2git.zip"
}


publishing {
  publications {
    binaryPublication(MavenPublication) {
      artifact zip2git
      groupId = 'com.volvo.esw.obt.tool'
      artifactId = '2git'
      version = versionString
    }
  }
}

artifactoryPublish.dependsOn uberjar

artifactory {
  contextUrl = artifactoryContextUrl
  publish {
    repository {
    //keys and user pars
      repoKey = "${artifactoryRepoPublish}"
      username = "${artifactoryUser}"
      password = "${artifactoryPassword}"
      maven = true
    }
    defaults {
    //pubs and props
      publications('binaryPublication')
    }
  }
  resolve {
    repository {
      repoKey = artifactoryRepoKey
      username = artifactoryUser
      password = artifactoryPassword
      maven = 'true'
    }
  }
}
